CREATE TABLE lib_tab(book_name VARCHAR2(25),status VARCHAR2(15)); 
 
CREATE TABLE library_audit(date_modified DATE, book_name VARCHAR2(25),old_status 
VARCHAR(15),new_status VARCHAR2(15),action VARCHAR2(25)); 
 
INSERT INTO lib_tab VALUES('TOC','AVAILABLE'); 
INSERT INTO lib_tab VALUES('DSA','UNAVAILABLE'); 
INSERT INTO lib_tab VALUES('CNS','AVAILABLE'); 
INSERT INTO lib_tab VALUES('SPOS','UNAVAILABLE'); 
INSERT INTO lib_tab VALUES('IOT_ES','AVAILABLE'); 
 
CREATE OR REPLACE TRIGGER trigger_1   
AFTER UPDATE OR DELETE OR INSERT ON lib_tab FOR EACH ROW  
ENABLE  
 BEGIN  
  IF UPDATING THEN  
   dbms_output.put_line(:OLD.status);  
   INSERT INTO library_audit VALUES 
(SYSDATE,:OLD.book_name,:OLD.status,:NEW.status,'UPDATE');  
                ELSIF INSERTING THEN  
                         dbms_output.put_line(:NEW.status);  
                         INSERT INTO library_audit VALUES 
(SYSDATE,:NEW.book_name,:OLD.status,:NEW.status,'INSERT');  
  ELSE  
   dbms_output.put_line(:OLD.book_name||'deleting');  
   INSERT INTO library_audit 
VALUES(SYSDATE,:OLD.book_name,:OLD.status,:NEW.status,'DELETE');  
  END IF;  
END;  
/ 
 
SELECT * FROM lib_tab; 
 
 
DELETE FROM lib_tab WHERE book_name = 'CNS'; 
UPDATE lib_tab SET status = 'UNAVAILABLE' WHERE book_name =  'TOC'; 
UPDATE lib_tab SET status = 'PRE-ORDER' WHERE book_name = 'SPOS'; 
UPDATE lib_tab SET status = 'AVAILABLE' WHERE book_name = 'IOT_ES'; 
INSERT INTO lib_tab VALUES('DBMS','AVAILABLE'); 
 
SELECT * FROM library_audit; 
 
 
 
SELECT * FROM lib_tab;