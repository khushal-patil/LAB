 
Write a Stored Procedure namely proc_Grade for the categorization of student. If marks scored by students in examination is <=1500 and marks>=990 then student will be placed in distinction category if marks scored are between 989 and 900 categories is first class, if marks 899 and 825 category is Higher Second Class. 
Write a PL/SQL block for using procedure created with above requirement. 
Stud_Marks(name, total_marks),  
Result (Roll,Name, Class) 


 set serveroutput on;
CREATE TABLE Stud_Marks (
    name VARCHAR2(50) NOT NULL,       
    total_marks NUMBER NOT NULL,      
    CONSTRAINT pk_stud_marks PRIMARY KEY (name) 
);

CREATE TABLE Result (
    Roll NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    Name VARCHAR2(50) NOT NULL,       
    Class VARCHAR2(50) NOT NULL       
);

CREATE OR REPLACE PROCEDURE proc_Grade (
    p_name IN VARCHAR2,    
    p_marks IN NUMBER      
) 
IS
    v_class VARCHAR2(20);  
BEGIN
    
    IF p_marks >= 990 AND p_marks <= 1500 THEN
        v_class := 'Distinction';
    ELSIF p_marks >= 900 AND p_marks <= 989 THEN
        v_class := 'First Class';
    ELSIF p_marks >= 825 AND p_marks <= 899 THEN
        v_class := 'Higher Second Class';
    ELSE
        v_class := 'Not Categorized';  
    END IF;

   
    DECLARE
        v_count NUMBER;  
    BEGIN
        
        SELECT COUNT(*) INTO v_count FROM Result WHERE Name = p_name;

        IF v_count = 0 THEN
            
            INSERT INTO Result (Name, Class) VALUES (p_name, v_class);
            COMMIT;  -- Commit the transaction after successful insertion
            DBMS_OUTPUT.PUT_LINE('Result for ' || p_name || ' inserted successfully.');
        ELSE
           
            DBMS_OUTPUT.PUT_LINE('Record for ' || p_name || ' already exists in Result table.');
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            
            ROLLBACK;
            DBMS_OUTPUT.PUT_LINE('Error occurred while categorizing ' || p_name || '. ' || SQLERRM);
    END;
END proc_Grade;
/


INSERT INTO Stud_Marks (name, total_marks) VALUES ('Alice', 1000);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Bob', 950);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Charlie', 875);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('David', 800);
INSERT INTO Stud_Marks (name, total_marks) VALUES ('Eve', 1500);

BEGIN
    proc_Grade('Alice', 1000);
    proc_Grade('Bob', 950);
    proc_Grade('Charlie', 875);
    proc_Grade('David', 800);
    proc_Grade('Eve', 1500);
END;
/

SELECT * FROM Result;

