 
Consider following Relation  
Employee(emp_id,employee_name,street,city) 
Works(employee_name,company_name,salary) 
Company(company_name,city) 
Manages(employee_name,manager_name) 
-- Employee table
CREATE TABLE Employee (
    emp_id INT PRIMARY KEY,
    employee_name VARCHAR(50) NOT NULL,
    street VARCHAR(50),
    city VARCHAR(50)
);

-- Works table
CREATE TABLE Works (
    employee_name VARCHAR(50) NOT NULL,
    company_name VARCHAR(50) NOT NULL,
    salary DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name),
    FOREIGN KEY (company_name) REFERENCES Company(company_name)
);

-- Company table
CREATE TABLE Company (
    company_name VARCHAR(50) PRIMARY KEY,
    city VARCHAR(50) NOT NULL
);

-- Manages table
CREATE TABLE Manages (
    employee_name VARCHAR(50) NOT NULL,
    manager_name VARCHAR(50),
    FOREIGN KEY (employee_name) REFERENCES Employee(employee_name),
    FOREIGN KEY (manager_name) REFERENCES Employee(employee_name)
);

-- Insert data into Employee table
INSERT INTO Employee (emp_id, employee_name, street, city) VALUES
(1, 'John Doe', '123 Elm Street', 'Pune'),
(2, 'Alice Smith', '456 Maple Avenue', 'Mumbai'),
(3, 'Bob Johnson', '789 Oak Drive', 'Delhi'),
(4, 'Eve Davis', '321 Pine Road', 'Bangalore'),
(5, 'Tom Harris', '654 Birch Boulevard', 'Chennai');

-- Insert data into Company table
INSERT INTO Company (company_name, city) VALUES
('InfoSys', 'Bangalore'),
('TechM', 'Chennai'),
('TCS', 'Pune'),
('Wipro', 'Delhi');

-- Insert data into Works table
INSERT INTO Works (employee_name, company_name, salary) VALUES
('John Doe', 'InfoSys', 80000.00),
('Alice Smith', 'TechM', 12000.00),
('Bob Johnson', 'TCS', 15000.00),
('Eve Davis', 'Wipro', 50000.00),
('Tom Harris', 'TechM', 9500.00);

-- Insert data into Manages table
INSERT INTO Manages (employee_name, manager_name) VALUES
('John Doe', 'Alice Smith'),
('Bob Johnson', 'Eve Davis'),
('Tom Harris', 'Alice Smith');


Create above tables with appropriate constraints like primary key, foreign key, not null etc.  
1.	Change the city of employee working with InfoSys to ‘Bangalore’
UPDATE Employee
SET city = 'Bangalore'
WHERE employee_name IN (
    SELECT employee_name
    FROM Works
    WHERE company_name = 'InfoSys'
); 
2.	Find the names of all employees who earn more than the average salary of all employees of their company. Assume that all people work for at most one company. 
SELECT employee_name
FROM Works AS W1
WHERE salary > (
    SELECT AVG(salary)
    FROM Works AS W2
    WHERE W1.company_name = W2.company_name
);
3.	Find the names, street address, and cities of residence for all employees who work for 'TechM' and earn more than $10,000. 
SELECT E.employee_name, E.street, E.city
FROM Employee AS E
JOIN Works AS W ON E.employee_name = W.employee_name
WHERE W.company_name = 'TechM' AND W.salary > 10000;
4.	Change name of table Manages to Management. 
ALTER TABLE Manages RENAME TO Management;
5.	Create Simple and Unique index on employee table. 
CREATE INDEX idx_employee_city ON Employee (city);
CREATE UNIQUE INDEX idx_employee_name ON Employee (employee_name);
6.	Display index Information  
SHOW INDEX FROM Employee;
 
