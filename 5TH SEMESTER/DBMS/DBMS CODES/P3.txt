Write a PL/SQL block of code using Cursor that will merge the data available in the newly created table N_Roll Call with the data available in the table O_RollCall. If the data in the first table already exist in the second table, then that data should be skipped.

 set serveroutput on;
CREATE TABLE N_RollCall (
    roll_no NUMBER PRIMARY KEY,
    student_name VARCHAR2(50) NOT NULL
);

CREATE TABLE O_RollCall (
    roll_no NUMBER PRIMARY KEY,
    student_name VARCHAR2(50) NOT NULL
);

INSERT INTO N_RollCall (roll_no, student_name) VALUES (1, 'Alice');
INSERT INTO N_RollCall (roll_no, student_name) VALUES (2, 'Bob');
INSERT INTO N_RollCall (roll_no, student_name) VALUES (3, 'Charlie');
INSERT INTO N_RollCall (roll_no, student_name) VALUES (4, 'David');
INSERT INTO N_RollCall (roll_no, student_name) VALUES (5, 'Eve');

INSERT INTO O_RollCall (roll_no, student_name) VALUES (1, 'Alice');
INSERT INTO O_RollCall (roll_no, student_name) VALUES (3, 'Charlie');


DECLARE
    
    CURSOR cur_rollcall IS
        SELECT roll_no, student_name
        FROM N_RollCall;

    v_roll_no INT;
    v_student_name VARCHAR2(50);
    v_count INT;
BEGIN
    
    OPEN cur_rollcall;

    LOOP
        FETCH cur_rollcall INTO v_roll_no, v_student_name;
        EXIT WHEN cur_rollcall%NOTFOUND;

        BEGIN
            
            SELECT COUNT(*)
            INTO v_count
            FROM O_RollCall
            WHERE roll_no = v_roll_no;

            IF v_count = 0 THEN
                INSERT INTO O_RollCall (roll_no, student_name) VALUES (v_roll_no, v_student_name);
            END IF;
        EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
               
                NULL;
        END;

    END LOOP;

    CLOSE cur_rollcall;

    COMMIT;

    DBMS_OUTPUT.PUT_LINE('Data from N_RollCall merged into O_RollCall successfully.');
END;
/
