 
Write a Row Level Before and After Trigger on Library table. 
The System should keep track of the records that are being updated or deleted. 
The old value of updated or deleted records should be added in Library_Audit table. 

SET SERVEROUTPUT ON;
CREATE TABLE lib_tab(book_name VARCHAR2(25),status VARCHAR2(15)); 
 
CREATE TABLE library_audit(date_modified DATE, book_name VARCHAR2(25),old_status 
VARCHAR(15),new_status VARCHAR2(15),action VARCHAR2(25)); 
 
INSERT INTO lib_tab VALUES('TOC','AVAILABLE'); 
INSERT INTO lib_tab VALUES('DSA','UNAVAILABLE'); 
INSERT INTO lib_tab VALUES('CNS','AVAILABLE'); 
INSERT INTO lib_tab VALUES('SPOS','UNAVAILABLE'); 
INSERT INTO lib_tab VALUES('IOT_ES','AVAILABLE'); 
 
CREATE OR REPLACE TRIGGER trigger_1   
AFTER UPDATE OR DELETE ON lib_tab FOR EACH ROW  
ENABLE  
 BEGIN  
  IF UPDATING THEN  
   dbms_output.put_line(:OLD.status);  
   INSERT INTO library_audit VALUES 
(SYSDATE,:OLD.book_name,:OLD.status,:NEW.status,'AFTER UPDATE');  
   ELSIF DELETING THEN  
   dbms_output.put_line(:OLD.book_name||' deleting');  
   INSERT INTO library_audit 
VALUES(SYSDATE,:OLD.book_name,:OLD.status,:NEW.status,'AFTER DELETE');  
  END IF;  
END;  
/ 
 
CREATE OR REPLACE TRIGGER trigger_before_update
BEFORE UPDATE OR DELETE ON lib_tab
FOR EACH ROW
ENABLE
BEGIN
  IF UPDATING THEN
    dbms_output.put_line(:OLD.status);
    INSERT INTO library_audit 
    VALUES (SYSDATE, :OLD.book_name, :OLD.status, :NEW.status, 'BEFORE UPDATE');
       
  ELSIF DELETING THEN
    dbms_output.put_line(:OLD.book_name || ' deleting');
    INSERT INTO library_audit 
    VALUES (SYSDATE, :OLD.book_name, :OLD.status, :NEW.status, 'BEFORE DELETE');
  END IF;
END;
/

SELECT * FROM lib_tab; 
 
 
DELETE FROM lib_tab WHERE book_name = 'CNS'; 
UPDATE lib_tab SET status = 'UNAVAILABLE' WHERE book_name =  'TOC'; 
UPDATE lib_tab SET status = 'PRE-ORDER' WHERE book_name = 'SPOS'; 
UPDATE lib_tab SET status = 'AVAILABLE' WHERE book_name = 'IOT_ES'; 
INSERT INTO lib_tab VALUES('DBMS','AVAILABLE'); 
 
SELECT * FROM library_audit; 
 
 
 
SELECT * FROM lib_tab;