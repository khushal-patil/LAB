 
Consider following Relation  
Account (Acc_no, branch_name,balance) 
Branch(branch_name,branch_city,assets) 
Customer(cust_name,cust_street,cust_city) 
Depositor(cust_name,acc_no) 
Loan(loan_no,branch_name,amount) 
Borrower(cust_name,loan_no) 

-- Account table
CREATE TABLE Account (
    Acc_no INT PRIMARY KEY,
    branch_name VARCHAR(50) NOT NULL,
    balance DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

-- Branch table
CREATE TABLE Branch (
    branch_name VARCHAR(50) PRIMARY KEY,
    branch_city VARCHAR(50) NOT NULL,
    assets DECIMAL(15, 2) NOT NULL
);

-- Customer table
CREATE TABLE Customer (
    cust_name VARCHAR(50) PRIMARY KEY,
    cust_street VARCHAR(50) NOT NULL,
    cust_city VARCHAR(50) NOT NULL
);

-- Depositor table (association between Customer and Account)
CREATE TABLE Depositor (
    cust_name VARCHAR(50),
    acc_no INT,
    PRIMARY KEY (cust_name, acc_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (acc_no) REFERENCES Account(Acc_no)
);

-- Loan table
CREATE TABLE Loan (
    loan_no INT PRIMARY KEY,
    branch_name VARCHAR(50) NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

-- Borrower table (association between Customer and Loan)
CREATE TABLE Borrower (
    cust_name VARCHAR(50),
    loan_no INT,
    PRIMARY KEY (cust_name, loan_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (loan_no) REFERENCES Loan(loan_no)
);

-- Insert data into Branch table
INSERT INTO Branch (branch_name, branch_city, assets) VALUES
('Main_Branch', 'Pune', 1000000.00),
('West_Branch', 'Mumbai', 1500000.00),
('East_Branch', 'Delhi', 2000000.00),
('North_Branch', 'Bangalore', 2500000.00);

-- Insert data into Account table
INSERT INTO Account (Acc_no, branch_name, balance) VALUES
(101, 'Main_Branch', 20000.00),
(102, 'Main_Branch', 30000.00),
(103, 'West_Branch', 18000.00),
(104, 'East_Branch', 12000.00),
(105, 'North_Branch', 25000.00),
(106, 'East_Branch', 22000.00);

-- Insert data into Customer table
INSERT INTO Customer (cust_name, cust_street, cust_city) VALUES
('John Doe', '123 Elm Street', 'Pune'),
('Alice Smith', '456 Maple Avenue', 'Mumbai'),
('Bob Johnson', '789 Oak Drive', 'Delhi'),
('Eve Davis', '321 Pine Road', 'Bangalore'),
('Tom Harris', '654 Birch Boulevard', 'Chennai'),
('Peter Pan', '101 Dream Lane', 'Pune');

-- Insert data into Depositor table
INSERT INTO Depositor (cust_name, acc_no) VALUES
('John Doe', 101),
('Alice Smith', 102),
('Bob Johnson', 103),
('Eve Davis', 104),
('Tom Harris', 105),
('Peter Pan', 106);

-- Insert data into Loan table
INSERT INTO Loan (loan_no, branch_name, amount) VALUES
(201, 'Main_Branch', 12000.00),
(202, 'West_Branch', 15000.00),
(203, 'East_Branch', 1300.00),
(204, 'North_Branch', 2500.00),
(205, 'Main_Branch', 5000.00);

-- Insert data into Borrower table
INSERT INTO Borrower (cust_name, loan_no) VALUES
('John Doe', 201),
('Alice Smith', 202),
('Bob Johnson', 203),
('Eve Davis', 204),
('Tom Harris', 205);

Create above tables with appropriate constraints like primary key, foreign key, not null etc. 
1.	Find the branches where average account balance > 15000. 
SELECT branch_name
FROM Account
GROUP BY branch_name
HAVING AVG(balance) > 15000;
2.	Find number of tuples in customer relation. 
SELECT COUNT(*) AS num_of_customers
FROM Customer;
3.	Calculate total loan amount given by bank. 
SELECT SUM(amount) AS total_loan_amount
FROM Loan;
4.	Delete all loans with loan amount between 1300 and 1500. 
DELETE FROM Loan
WHERE amount BETWEEN 1300 AND 1500;
5.	Find the average account balance at each branch 
SELECT branch_name, AVG(balance) AS average_balance
FROM Account
GROUP BY branch_name;
6.	Find name of Customer and city where customer name starts with Letter P. 
SELECT cust_name, cust_city
FROM Customer
WHERE cust_name LIKE 'P%'; 
 
