Write a PL/SQL Block to increase the salary of employees by 10% of existing salary, who are having salary less than average salary of organization, whenever such salary updates take place, a record for same is maintained in the increment_salary table. 
emp(emp_no, salary) increment_salary(emp_no, salary) 
-- Create the emp table
CREATE TABLE emp (
    emp_no INT PRIMARY KEY,
    salary DECIMAL(10, 2)
);

-- Create the increment_salary table to store salary increments
CREATE TABLE increment_salary (
    emp_no INT,
    salary DECIMAL(10, 2),
    increment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
 
 DECLARE
    -- Declare a variable to store the average salary of all employees
    avg_salary DECIMAL(10, 2);
    
    -- Cursor to fetch employees with salary less than average salary
    CURSOR emp_cursor IS
        SELECT emp_no, salary
        FROM emp
        WHERE salary < avg_salary;
        
    -- Declare a variable to store the new salary after increment
    new_salary DECIMAL(10, 2);
    
BEGIN
    -- Calculate the average salary in the organization
    SELECT AVG(salary) INTO avg_salary FROM emp;
    
    -- Loop through each employee who earns less than the average salary
    FOR emp_rec IN emp_cursor LOOP
        -- Calculate the new salary (10% increase)
        new_salary := emp_rec.salary * 1.10;
        
        -- Update the employee's salary in the emp table
        UPDATE emp
        SET salary = new_salary
        WHERE emp_no = emp_rec.emp_no;
        
        -- Insert the old salary and new salary into increment_salary table
        INSERT INTO increment_salary (emp_no, salary)
        VALUES (emp_rec.emp_no, new_salary);
        
        -- Optionally, print a message for each update
        DBMS_OUTPUT.PUT_LINE('Employee ' || emp_rec.emp_no || ' salary updated to ' || new_salary);
    END LOOP;

    -- Commit the changes to the database
    COMMIT;
    
EXCEPTION
    WHEN OTHERS THEN
        -- If an error occurs, rollback the transaction and print error
        ROLLBACK;
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END;
/
