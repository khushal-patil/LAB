 
Consider following Relation  
Account (Acc_no, branch_name,balance) 
Branch(branch_name,branch_city,assets) 
Customer(cust_name,cust_street,cust_city) 
Depositor(cust_name,acc_no) 
Loan(loan_no,branch_name,amount) 
Borrower(cust_name,loan_no) Execute the following query: 

CREATE TABLE Account (
    acc_no INT PRIMARY KEY,
    branch_name VARCHAR(50),
    balance DECIMAL(15, 2),
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Branch (
    branch_name VARCHAR(50) PRIMARY KEY,
    branch_city VARCHAR(50),
    assets DECIMAL(15, 2)
);

CREATE TABLE Customer (
    cust_name VARCHAR(50),
    cust_street VARCHAR(50),
    cust_city VARCHAR(50),
    PRIMARY KEY (cust_name)
);

CREATE TABLE Depositor (
    cust_name VARCHAR(50),
    acc_no INT,
    PRIMARY KEY (cust_name, acc_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (acc_no) REFERENCES Account(acc_no)
);

CREATE TABLE Loan (
    loan_no INT PRIMARY KEY,
    branch_name VARCHAR(50),
    amount DECIMAL(15, 2),
    FOREIGN KEY (branch_name) REFERENCES Branch(branch_name)
);

CREATE TABLE Borrower (
    cust_name VARCHAR(50),
    loan_no INT,
    PRIMARY KEY (cust_name, loan_no),
    FOREIGN KEY (cust_name) REFERENCES Customer(cust_name),
    FOREIGN KEY (loan_no) REFERENCES Loan(loan_no)
);


INSERT INTO Branch (branch_name, branch_city, assets) VALUES
('Pune_Station', 'Pune', 500000.00),
('Mumbai_Central', 'Mumbai', 700000.00),
('Delhi_City', 'Delhi', 600000.00);


INSERT INTO Account (Acc_no, branch_name, balance) VALUES
(101, 'Pune_Station', 10000.00),
(102, 'Mumbai_Central', 15000.00),
(103, 'Delhi_City', 5000.00);


INSERT INTO Customer (cust_name, cust_street, cust_city) VALUES
('John Doe', '123 Elm Street', 'Pune'),
('Alice Smith', '456 Maple Avenue', 'Mumbai'),
('Bob Johnson', '789 Oak Drive', 'Delhi'),
('Eve Davis', '321 Pine Road', 'Bangalore'),
('Tom Harris', '654 Birch Boulevard', 'Pune');


INSERT INTO Depositor (cust_name, acc_no) VALUES
('John Doe', 101),
('Alice Smith', 102),
('Bob Johnson', 103),
('Eve Davis', 101);


INSERT INTO Loan (loan_no, branch_name, amount) VALUES
(1, 'Pune_Station', 20000.00),
(2, 'Mumbai_Central', 30000.00),
(3, 'Delhi_City', 15000.00);


INSERT INTO Borrower (cust_name, loan_no) VALUES
('John Doe', 1),
('Tom Harris', 2),
('Alice Smith', 3);

1.	Create a View1 to display List all customers in alphabetical order who have loan from Pune_Station branch. 
CREATE VIEW View1 AS
SELECT Customer.cust_name
FROM Customer
JOIN Borrower ON Customer.cust_name = Borrower.cust_name
JOIN Loan ON Borrower.loan_no = Loan.loan_no
WHERE Loan.branch_name = 'Pune_Station'
ORDER BY Customer.cust_name;

2.	Create View2 on branch table by selecting any two columns and perform insert update delete operations. 
CREATE VIEW View2 AS
SELECT branch_name, branch_city
FROM Branch;
INSERT INTO View2 (branch_name, branch_city) VALUES ('New_Branch', 'New_City');
UPDATE View2
SET branch_city = 'Updated_City'
WHERE branch_name = 'New_Branch';
DELETE FROM View2
WHERE branch_name = 'New_Branch';

3.	Create View3 on borrower and depositor table by selecting any one column from each table perform insert update delete operations. 
CREATE VIEW View3 AS
SELECT Borrower.cust_name AS borrower_name, Depositor.acc_no AS depositor_acc_no
FROM Borrower JOIN Depositor ON Borrower.cust_name = Depositor.cust_name;
INSERT INTO View3 (borrower_name, depositor_acc_no) VALUES ('John Doe', 12345);
UPDATE View3
SET depositor_acc_no = 54321
WHERE borrower_name = 'John Doe';
DELETE FROM View3
WHERE borrower_name = 'John Doe';


4.	Create Union of left and right joint for all customers who have an account or loan or both at bank 
SELECT DISTINCT cust_name
FROM Depositor
LEFT JOIN Borrower ON Depositor.cust_name = Borrower.cust_name
UNION
SELECT DISTINCT cust_name
FROM Borrower
RIGHT JOIN Depositor ON Borrower.cust_name = Depositor.cust_name;


5.	Create Simple and Unique index. 
CREATE INDEX idx_customer_city ON Customer (cust_city);

        CREATE UNIQUE INDEX idx_branch_name ON Branch (branch_name);
6.	Display index Information. 
     SHOW INDEX FROM Customer;
     SHOW INDEX FROM Branch;
